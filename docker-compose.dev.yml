version: '3.8'

services:
  product-catalog-service:
    build: .
    container_name: product-catalog-service-dev
    ports:
      - "8082:8082"
    environment:
      - DATABASE_URL=postgresql+asyncpg://catalog_user:catalog_dev_password@product-catalog-db-dev:5432/product_catalog_db
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
      - LOG_FORMAT=console
      - CORS_ORIGINS=["http://localhost:3000", "http://localhost:3001"]
    volumes:
      - ./src:/app/src:ro  # Mount source code for development
    depends_on:
      product-catalog-db-dev:
        condition: service_healthy
    networks:
      - product-catalog-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  product-catalog-db-dev:
    image: postgres:16-alpine
    container_name: product-catalog-db-dev
    environment:
      - POSTGRES_DB=product_catalog_db
      - POSTGRES_USER=catalog_user
      - POSTGRES_PASSWORD=catalog_dev_password
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - product_catalog_dev_data:/var/lib/postgresql/data
      - ./sql/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "5433:5432"
    networks:
      - product-catalog-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U catalog_user -d product_catalog_db"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  product_catalog_dev_data:
    driver: local

networks:
  product-catalog-dev-network:
    driver: bridge